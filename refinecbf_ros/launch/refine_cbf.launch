<?xml version="1.0"?>

<launch>
    <arg name="cbf_state_topic" />
    <arg name="cbf_safe_control_topic" />
    <arg name="cbf_nominal_control_topic" />
    <arg name="vf_update_topic" />
    <arg name="actuation_update_topic" />
    <arg name="disturbance_update_topic" />
    <arg name="sdf_update_topic" />
    <arg name="use_sdf" />
    <arg name="safety_filter_active" />
    <arg name="update_vf_online" />
    <arg name="vf_initialization_method" />
    <arg name="CBF_parameter_file" />
    <arg name="initial_vf_file" />
    <arg name="vf_update_method" />
    <arg name="vf_update_accuracy" />

    <node name="refine_cbf"
        pkg="refinecbf_ros"
        type="refine_cbf_node.py"
        output="screen"
        ns="safety_filter">
        <param name="topics/state" value="$(arg cbf_state_topic)" />
        <param name="topics/filtered_control" value="$(arg cbf_safe_control_topic)" />
        <param name="topics/nominal_control" value="$(arg cbf_nominal_control_topic)" />
        <param name="topics/actuation_update" value="$(arg actuation_update_topic)" />
        <param name="topics/disturbance_update" value="$(arg disturbance_update_topic)" />
        <param name="topics/sdf_update" value="$(arg sdf_update_topic)" />
        <param name="use_sdf" value="$(arg use_sdf)" />
        <param name="topics/vf_update" value="$(arg vf_update_topic)" />
        <param name="safety_filter_active" value="$(arg safety_filter_active)" />
        <param name="vf_update_method" value="$(arg vf_update_method)" />
    </node>
 
  <!-- Services -->
    <arg name="modify_environment_service" value="/env/modify_environment" />

 <!-- Modify Environment server node. -->
    <node name="modify_environment"
            pkg="refinecbf_ros"
            type="modify_environment.py"
            output="screen"
            ns="env">
        <param name="topics/disturbance_update" value="$(arg disturbance_update_topic)" />
        <param name="topics/actuation_update" value="$(arg actuation_update_topic)" />
        <param name="services/modify_environment" value="$(arg modify_environment_service)" />

    </node>
  
    <group if="$(eval arg('vf_initialization_method') == 'cbf')">
        <arg name="CBF_parameter_file_loc" value="$(find refinecbf_ros)/config/$(arg CBF_parameter_file)" />
        <rosparam ns="cbf" file="$(arg CBF_parameter_file_loc)" command="load" />
    </group>

    <group if="$(eval arg('vf_initialization_method') == 'file')">
        <param name="vf_file" value="$(find refinecbf_ros)/config/$(arg initial_vf_file)" />
    </group>

    <group if="$(eval arg('safety_filter_active') == 1)">
        <node name="hj_reachability"
            pkg="refinecbf_ros"
            type="hj_reachability_node.py"
            output="screen"
            ns="safety_filter">
            <param name="topics/disturbance_update" value="$(arg disturbance_update_topic)" />
            <param name="topics/actuation_update" value="$(arg actuation_update_topic)" />
            <param name="topics/sdf_update" value="$(arg sdf_update_topic)" />
            <param name="topics/vf_update" value="$(arg vf_update_topic)" />
            <param name="update_vf_online" value="$(arg update_vf_online)" />
            <param name="vf_initialization_method" value="$(arg vf_initialization_method)" />
            <param name="vf_update_method" value="$(arg vf_update_method)" />
            <param name="vf_update_accuracy" value="$(arg vf_update_accuracy)" />
        </node>
    </group>

</launch>